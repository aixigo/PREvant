apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: prevant
---
apiVersion: v1
kind: Service
metadata:
  name: prevant
  namespace: default
spec:
  ports:
    - protocol: TCP
      name: web
      port: 80
  selector:
    app: prevant
---
apiVersion: v1
kind: ConfigMap
metadata:
   name: prevant
data:
   config.toml: |
      [companions.templating.userDefinedSchema]
      type = "object"
      properties = { deployHttpd = { type = "string" } }

      [[companions.bootstrapping.containers]]
      image = "aixigo/httpd-bootstrap-example"
      imagePullPolicy = "Never"
      args = [
         "-a", "{{userDefined.deployHttpd}}"
      ]
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: prevant
  labels:
    app: prevant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prevant
  template:
    metadata:
      labels:
        app: prevant
    spec:
      serviceAccountName: prevant
      containers:
        - name: prevant
          image: aixigo/prevant
          # TODO: used for testing purposes only, used Always in production
          imagePullPolicy: Never
          command:
            - /app/prevant
          args:
            - --runtime-type
            - Kubernetes
            - --config
            - /run/config/config.toml
          ports:
            - name: web
              containerPort: 80
          volumeMounts:
            - name: podinfo
              mountPath: /run/podinfo/
              readOnly: true
            - name: config
              mountPath: /run/config/
              readOnly: true
          readinessProbe:
            httpGet:
              path: /api/apps
              port: web
      volumes:
        - name: podinfo
          downwardAPI:
             items:
               - path: "labels"
                 fieldRef:
                    fieldPath: metadata.labels
        - name: config
          configMap:
             name: prevant
             items:
                - key: config.toml
                  path: config.toml
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prevant-ingress-route
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: PathPrefix(`/`)
      priority: -100
      services:
        - name: prevant
          port: 80
